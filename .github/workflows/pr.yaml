name: Latest Test on Pull Request 

# Controls when the action will run. 
on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'design/**'
      - 'examples/**'
      - 'extensions/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains two jobs called "build autotune" and "build crc"
  build_autotune:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
         repository: kruize/autotune
         ref: mvp_demo
         path: autotune
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.3.0
        with:
          minikube version: 'v1.16.0'
          kubernetes version: 'v1.19.2'
      - name: Build autotune
        run: |
          echo Build autotune
          cd autotune
          ./build.sh -i autotune_operator:test
          docker images | grep autotune     
      - name: Check cluster info on minikube
        run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
      - name: Install Prometheus on minikube
        run: |
          echo Install Prometheus on minikube
          cd autotune/scripts
          ./prometheus_on_minikube.sh -as
      - name: Deploy autotune
        run: |
          echo Deploy autotune
          cd autotune
          cp ./manifests/autotune/autotune-operator-deployment.yaml_template ./manifests/autotune/autotune-operator-deployment.yaml_template.old
          sed -e "s/imagePullPolicy: Always/imagePullPolicy: IfNotPresent/g" ./manifests/autotune/autotune-operator-deployment.yaml_template.old > ./manifests/autotune/autotune-operator-deployment.yaml_template
          echo "***************************************************************"
          cat ./manifests/autotune/autotune-operator-deployment.yaml_template
          echo "***************************************************************"          
          ./deploy.sh -c minikube -i autotune_operator:test
          sleep 20
          autotune_pod=$(kubectl get pod -n monitoring | grep autotune | cut -d " " -f1)
          echo "Autotune pod = $autotune_pod"
          kubectl logs $autotune_pod -n monitoring -c autotune > ${GITHUB_WORKSPACE}/kruize_pod_log.txt 2>&1
      - name: Archive results
        if: always()
        run: |
          cd ${GITHUB_WORKSPACE}
          tar cvf autotune_results.tar kruize_pod_log.txt

      - name: Upload results
        if: always()
        uses: actions/upload-artifact@v3
        with:
           name: autotune-results
           path: ./autotune_results.tar
           retention-days: 2


  build_crc:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
         repository: kruize/autotune
         ref: mvp_demo
         path: autotune
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.3.0
        with:
          minikube version: 'v1.16.0'
          kubernetes version: 'v1.19.2'
      - name: Build crc
        run: |
          echo Build crc
          cd autotune
          ./build.sh -i autotune_operator:test
          docker images | grep autotune
      - name: Check cluster info on minikube
        run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
      - name: Install Prometheus on minikube
        run: |
          echo Install Prometheus on minikube
          cd autotune/scripts
          ./prometheus_on_minikube.sh -as
      - name: Deploy crc
        run: |
          echo Deploy crc
          echo "***************************************************************"
          cd autotune
          cp ./manifests/crc/kruize-crc-minikube.yaml ./manifests/crc/kruize-crc-minikube.yaml.old
          sed -e "s/image: \"kruize\/autotune_operator:0.0.8_mvp\"/image: \"autotune_operator:test\"/g" ./manifests/crc/kruize-crc-minikube.yaml.old > ./manifests/crc/kruize-crc-minikube.yaml
          sed -i "s/imagePullPolicy: Always/imagePullPolicy: IfNotPresent/g" ./manifests/crc/kruize-crc-minikube.yaml
          cat ./manifests/crc/kruize-crc-minikube.yaml
          kubectl apply -f ./manifests/crc/kruize-crc-minikube.yaml
          sleep 120
          autotune_pod=$(kubectl get pod -n monitoring | grep kruize | cut -d " " -f1)
          echo "Autotune pod = $autotune_pod"
          kubectl logs $autotune_pod -n monitoring > ${GITHUB_WORKSPACE}/kruize_pod_log.txt 2>&1
      - name: Archive results
        if: always()
        run: |
          cd ${GITHUB_WORKSPACE}
          tar cvf crc_results.tar kruize_pod_log.txt

      - name: Upload results
        if: always()
        uses: actions/upload-artifact@v3
        with:
           name: crc-results
           path: ./crc_results.tar
           retention-days: 2
