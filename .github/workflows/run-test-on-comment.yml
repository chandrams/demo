name: Run tests on comment

on:
  issue_comment:
    types: [created]
    issue_type: [pull_request]
  pull_request_review:
    types: [submitted]

jobs:
  functest:
  
    # Only run this if the user asked us to
    if: contains(github.event.comment.body, 'run functional tests')
    outputs:
      workflow_url: ${{ steps.workflow_run_info.outputs.url }}
      workflow_id: ${{ steps.workflow_run_info.outputs.id }}
    runs-on: ubuntu-20.04
  
    steps:
      - name: Get workflow run info
        run: |
          echo "url=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" >> $GITHUB_OUTPUT
          echo "id=$GITHUB_RUN_ID" >> $GITHUB_OUTPUT
          echo "url=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          echo "id=$GITHUB_RUN_ID"
        id: workflow_run_info
        
      - name: Debug Comment Content
        run: echo "Comment :${{ github.event.comment.body }}"

     
      - uses: actions/github-script@v6
        id: get-pr
        with:
          script: |
            const request = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            }
            core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
            try {
              const result = await github.pulls.get(request)
              return result.data
            } catch (err) {
              core.setFailed(`Request failed with error ${err}`)
            }
      
      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: refs/pull/${{ github.event.issue.number }}/head
              
      - name: Run hello
        run: |
          git branch
          cat Hello.java
          javac Hello.java
          java Hello
          
  reportFailure:
    runs-on: ubuntu-latest
    needs: [functest]
    if: failure()
    steps:
    - name: Create comment
      uses: actions/github-script@v6
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          comment_body = `
          @${{ github.actor }} Build(s) failed.
          Workflow Run ID: [${{ needs.functest.outputs.workflow_id }}](${{ needs.functest.outputs.workflow_url }})
          `;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment_body
          })

  reportCancelled:
    runs-on: ubuntu-latest
    needs: [functest]
    if: cancelled()
    steps:
    - name: Create comment
      uses: actions/github-script@v6
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          comment_body = `
          @${{ github.actor }} Build(s) cancelled.
          Workflow Run ID: [${{ needs.functest.outputs.workflow_id }}](${{ needs.functest.outputs.workflow_url }})
          `;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment_body
          })
          
  reportSuccess:
    runs-on: ubuntu-latest
    needs: [functest]
    if: success()
    steps:
    - name: Create comment
      uses: actions/github-script@v6
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          
          comment_body = `
          @${{ github.actor }} Build(s) successful.
          Workflow Run ID: [${{ needs.functest.outputs.workflow_id }}](${{ needs.functest.outputs.workflow_url }})
          `;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment_body
          })
